     1                                  ; fCALC.asm
     2                                  extern printf
     3                                  section .data
     4 00000000 0000000000002240            number1     dq      9.0
     5 00000008 0000000000405240            number2     dq      73.0
     6 00000010 0000000000004540            foo         dq      42.0
     7 00000018 7B14AE47E17A1840            bar         dq      6.12
     8 00000020 546865206E756D6265-         fmt         db      "The numbers are %f and %f",10,0 
     8 00000029 727320617265202566-
     8 00000032 20616E642025660A00 
     9                                  
    10 0000003B 25732025660A00              fmtfloat    db      "%s %f",10,0
    11 00000042 54686520666C6F6174-         f_sum       db      "The float sum of %f and %f is %f",10,0
    11 0000004B 2073756D206F662025-
    11 00000054 6620616E6420256620-
    11 0000005D 69732025660A00     
    12 00000064 54686520666C6F6174-         f_dif       db      "The float difference of %f and %f is %f",10,0
    12 0000006D 20646966666572656E-
    12 00000076 6365206F6620256620-
    12 0000007F 616E64202566206973-
    12 00000088 2025660A00         
    13 0000008D 54686520666C6F6174-         f_mul       db      "The float product of %f and %f is %f",10,0
    13 00000096 2070726F6475637420-
    13 0000009F 6F6620256620616E64-
    13 000000A8 202566206973202566-
    13 000000B1 0A00               
    14 000000B3 54686520666C6F6174-         f_div       db      "The float division of %f and %f is %f",10,0
    14 000000BC 206469766973696F6E-
    14 000000C5 206F6620256620616E-
    14 000000CE 642025662069732025-
    14 000000D7 660A00             
    15 000000DA 54686520666C6F6174-         f_sqrt      db      "The float squareroot of %f is %f",10,0
    15 000000E3 20737175617265726F-
    15 000000EC 6F74206F6620256620-
    15 000000F5 69732025660A00     
    16                                  section .bss
    17                                  section .text
    18                                      global main
    19                                  main:
    20                                      ; push    rbp
    21 00000000 4889E5                      mov     rbp,rsp
    22                                  ; print numbers
    23 00000003 F20F100425-                 movsd   xmm0, [number1]
    23 00000008 [00000000]         
    24 0000000C F20F100C25-                 movsd   xmm1, [number2]
    24 00000011 [08000000]         
    25 00000015 48BF-                       mov     rdi, fmt
    25 00000017 [2000000000000000] 
    26 0000001F B802000000                  mov     rax,2           ; 2 floats
    27 00000024 E8(00000000)                call printf
    28                                  ; sum
    29 00000029 F20F101425-                 movsd   xmm2, [number1]     ; double precision float into xmm
    29 0000002E [00000000]         
    30 00000032 F20F581425-                 addsd   xmm2, [number2]     ; add double precision to xmm
    30 00000037 [08000000]         
    31                                          ; print result
    32 0000003B F20F100425-                     movsd   xmm0, [number1]
    32 00000040 [00000000]         
    33 00000044 F20F100C25-                     movsd   xmm1, [number2]
    33 00000049 [08000000]         
    34 0000004D 48BF-                           mov     rdi,f_sum
    34 0000004F [4200000000000000] 
    35 00000057 B803000000                      mov     rax,3
    36 0000005C E8(00000000)                    call printf         ; printf pulls xmm registers in order xmm0-n and removes from reg
    37                                  ; difference
    38 00000061 F20F101425-                 movsd   xmm2, [number1]
    38 00000066 [00000000]         
    39 0000006A F20F5C1425-                 subsd   xmm2, [number2]
    39 0000006F [08000000]         
    40                                          ; print result
    41 00000073 F20F100425-                     movsd   xmm0, [number1]
    41 00000078 [00000000]         
    42 0000007C F20F100C25-                     movsd   xmm1, [number2]
    42 00000081 [08000000]         
    43 00000085 48BF-                           mov     rdi,f_dif
    43 00000087 [6400000000000000] 
    44 0000008F B803000000                      mov     rax, 3
    45 00000094 E8(00000000)                    call printf
    46                                  ; multiplication
    47 00000099 F20F101425-                 movsd   xmm2, [number1]
    47 0000009E [00000000]         
    48 000000A2 F20F591425-                 mulsd   xmm2, [number2]
    48 000000A7 [08000000]         
    49                                          ; print result
    50 000000AB F20F100425-                     movsd   xmm0, [number1]
    50 000000B0 [00000000]         
    51 000000B4 F20F100C25-                     movsd   xmm1, [number2]
    51 000000B9 [08000000]         
    52 000000BD 48BF-                           mov     rdi,f_mul
    52 000000BF [8D00000000000000] 
    53 000000C7 B803000000                      mov     rax, 3
    54 000000CC E8(00000000)                    call printf
    55                                  ; division
    56 000000D1 F20F101425-                 movsd   xmm2, [foo]
    56 000000D6 [10000000]         
    57 000000DA F20F5E1425-                 divsd   xmm2, [bar]
    57 000000DF [18000000]         
    58                                          ; print result
    59 000000E3 F20F100425-                     movsd   xmm0, [foo]
    59 000000E8 [10000000]         
    60 000000EC F20F100C25-                     movsd   xmm1, [bar]
    60 000000F1 [18000000]         
    61 000000F5 48BF-                           mov     rdi, f_div
    61 000000F7 [B300000000000000] 
    62 000000FF B801000000                      mov     rax, 1 ; book says 1 float - isn't it 3?
    63 00000104 E8(00000000)                    call printf
    64                                  ; square root
    65 00000109 F20F510C25-                 sqrtsd  xmm1, [number1] ; sqrt double precision in xmm1
    65 0000010E [00000000]         
    66                                          ; print result
    67 00000112 48BF-                           mov     rdi, f_sqrt
    67 00000114 [DA00000000000000] 
    68 0000011C F20F100425-                     movsd   xmm0, [number1]
    68 00000121 [00000000]         
    69 00000125 B802000000                      mov     rax, 2      ; 2 float
    70 0000012A E8(00000000)                    call printf
    71                                  ; exit
    72 0000012F 4889EC                      mov rsp, rbp
    73                                      ; pop rbp             ; undo push from beginning
    74 00000132 C3                          ret
    75                                      
